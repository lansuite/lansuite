"use strict";(self.webpackChunklansuite_documentation=self.webpackChunklansuite_documentation||[]).push([[2126],{9069:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>c,frontMatter:()=>s,metadata:()=>i,toc:()=>d});var o=n(5893),r=n(1151);const s={id:"folder-structure",title:"Folder structure",sidebar_position:6},a=void 0,i={id:"development/folder-structure",title:"Folder structure",description:"Introduction",source:"@site/docs/development/folder-structure.md",sourceDirName:"development",slug:"/development/folder-structure",permalink:"/lansuite/docs/development/folder-structure",draft:!1,unlisted:!1,editUrl:"https://github.com/lansuite/lansuite/tree/master/website/docs/development/folder-structure.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{id:"folder-structure",title:"Folder structure",sidebar_position:6},sidebar:"documentationSidebar",previous:{title:"Creating a Release",permalink:"/lansuite/docs/development/production-release"},next:{title:"Performance measurement",permalink:"/lansuite/docs/development/performance-measurement"}},u={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Folder structure",id:"folder-structure",level:2}];function l(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h2,{id:"introduction",children:"Introduction"}),"\n",(0,o.jsx)(t.p,{children:"In order to avoid unnecessary calculations of unchanged data or retrieval from slow sources LanSuite now uses an internal caching infrastructure.\nWhen you are implementing new features it should be considered if content needs to be created on every call or if content can be cached and reused.\nAlso for the usage this has some implications as the content on some pages may not represent the latest state, but the cached content."}),"\n",(0,o.jsx)(t.h2,{id:"folder-structure",children:"Folder structure"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"\u251c\u2500\u2500 design                          -> Storage for standard and your custom designs\n\u2502\xa0\xa0 \u251c\u2500\u2500 beamer\n\u2502\xa0\xa0 \u251c\u2500\u2500 images\n\u2502\xa0\xa0 \u251c\u2500\u2500 osX\n\u2502\xa0\xa0 \u251c\u2500\u2500 <your design here>\n\u2502\xa0\xa0 \u251c\u2500\u2500 simple\n\u2502\xa0\xa0 \u251c\u2500\u2500 style.css\n\u2502\xa0\xa0 \u251c\u2500\u2500 sunset\n\u2502\xa0\xa0 \u2514\u2500\u2500 templates\n\u251c\u2500\u2500 ext_inc                         -> Storage for external files that belong to the instance itself, like user uploads and similar\n\u2502\xa0\xa0 \u251c\u2500\u2500 UserFiles                       -> Upload-Directory for FCK-Editor files\n\u2502\xa0\xa0 \u251c\u2500\u2500 avatare                         -> Upload-Directory for user avatare (module: usrmgr)\n\u2502\xa0\xa0 \u251c\u2500\u2500 banner                          -> Upload-Directory for sponsor banners (module: sponsor)\n\u2502\xa0\xa0 \u251c\u2500\u2500 barcodes                        -> Temp. storage for barcode generation (module: pdf)\n\u2502\xa0\xa0 \u251c\u2500\u2500 board_upload                    -> Files uploaded by users using the board (module: board)\n\u2502\xa0\xa0 \u251c\u2500\u2500 bugtracker_upload               -> Files uploaded by users using the bugtracker (module: bugtracker)\n\u2502\xa0\xa0 \u251c\u2500\u2500 downloads                       -> Contains files, which will be distributed using the downloads module  (module: downloads)\n\u2502\xa0\xa0 \u251c\u2500\u2500 fonts                           -> Storage for fonts used by Captcha, Barcode and image generation\n\u2502\xa0\xa0 \u251c\u2500\u2500 foodcenter                      -> Upload-Directory for files (module: foodcenter)\n\u2502\xa0\xa0 \u251c\u2500\u2500 foodcenter_templates            -> Storage for HTML templates (module: foodcenter)\n\u2502\xa0\xa0 \u251c\u2500\u2500 footer_buttons                  -> Storage for images used in the footer (design)\n\u2502\xa0\xa0 \u251c\u2500\u2500 home                            -> Storage for variable text (module: home)\n\u2502\xa0\xa0 \u251c\u2500\u2500 import                          -> Temp. storage for imported files (module: install)\n\u2502\xa0\xa0 \u251c\u2500\u2500 news_icons                      -> Storage for images used in the news (module: news)\n\u2502\xa0\xa0 \u251c\u2500\u2500 newsfeed                        -> Contain newsfeeds, which will be generated each time an admin posts news (module: news)\n\u2502\xa0\xa0 \u251c\u2500\u2500 noc                             -> Storage for images used in the noc module (module: noc)\n\u2502\xa0\xa0 \u251c\u2500\u2500 party_infos                     -> Contain stats and infos about LAN-Parties, generated as XML.\n\u2502\xa0\xa0 \u251c\u2500\u2500 pdf_fonts                       -> Storage for FPDF fonts\n\u2502\xa0\xa0 \u251c\u2500\u2500 pdf_templates                   -> Storage for images used for pdf generation (module: pdf)\n\u2502\xa0\xa0 \u251c\u2500\u2500 picgallery                      -> Contain user pictures and thumbnails of the image gallery (module: picgallery)\n\u2502\xa0\xa0 \u251c\u2500\u2500 picgallery_icon                 -> Storage for static images used in the image gallery (module: picgallery)\n\u2502\xa0\xa0 \u251c\u2500\u2500 smilies                         -> Storage for static images for smilies\n\u2502\xa0\xa0 \u251c\u2500\u2500 sticker\n\u2502\xa0\xa0 \u251c\u2500\u2500 team_banners                    -> Contains the banners of each team, registered to a tournament (module: tournament2)\n\u2502\xa0\xa0 \u251c\u2500\u2500 templates_c                     -> Compilation directory for the smarty template system\n\u2502\xa0\xa0 \u251c\u2500\u2500 templates_cache                 -> Cache directory for the smarty template system\n\u2502\xa0\xa0 \u251c\u2500\u2500 tournament_icons                -> Storage for images used for tournaments (module: tournament2)\n\u2502\xa0\xa0 \u251c\u2500\u2500 tournament_rules                -> Storage for tournaments rules (module: tournament2)\n\u2502\xa0\xa0 \u251c\u2500\u2500 tournament_screenshots          -> Contains tournament screenshots, the user upload, when submitting results  (module: tournament2)\n\u2502\xa0\xa0 \u2514\u2500\u2500 user_pics                       -> Contains pictures of users. You can either upload them using the usermanagers edit function, or you can put them into this directory manualy, using the filename picXXX.jpg, where XXX is the users userid (without leeding zeros) (module: usrmgr)\n\u251c\u2500\u2500 ext_scripts                     -> Folder for external scripts used by LANSuite\n\u251c\u2500\u2500 inc                             -> LANSuite source code\n\u2502\xa0\xa0 \u251c\u2500\u2500 Classes\n\u2502\xa0\xa0 \u251c\u2500\u2500 Functions\n\u2502\xa0\xa0 \u251c\u2500\u2500 base\n\u2502\xa0\xa0 \u2514\u2500\u2500 language\n\u251c\u2500\u2500 modules                         -> LANSuite modules\n\u251c\u2500\u2500 tests                           -> Unit and integration tests\n\u251c\u2500\u2500 vendor                          -> External dependencies installed by composer\n\u2514\u2500\u2500 website                         -> LANSuite documentation website\n"})})]})}function c(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>i,a:()=>a});var o=n(7294);const r={},s=o.createContext(r);function a(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);